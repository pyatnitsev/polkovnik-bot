[{"C:\\Users\\webco\\go\\src\\teamBot\\ui\\src\\index.js":"1","C:\\Users\\webco\\go\\src\\teamBot\\ui\\src\\App.js":"2","C:\\Users\\webco\\go\\src\\teamBot\\ui\\src\\Components\\Sidebar\\Sidebar.js":"3","C:\\Users\\webco\\go\\src\\teamBot\\ui\\src\\Components\\Header\\Header.js":"4","C:\\Users\\webco\\go\\src\\teamBot\\ui\\src\\Pages\\HomePage.js":"5","C:\\Users\\webco\\go\\src\\teamBot\\ui\\src\\Pages\\SettingsPage.js":"6","C:\\Users\\webco\\go\\src\\teamBot\\ui\\src\\Pages\\UserListPage.js":"7","C:\\Users\\webco\\go\\src\\teamBot\\ui\\src\\Pages\\TaskListPage.js":"8","C:\\Users\\webco\\go\\src\\teamBot\\ui\\src\\Pages\\TeamSettingsPage.js":"9","C:\\Users\\webco\\go\\src\\teamBot\\ui\\src\\Pages\\WeekendSettingsPage.js":"10","C:\\Users\\webco\\go\\src\\teamBot\\ui\\src\\Services\\ServerApi.js":"11","C:\\Users\\webco\\go\\src\\teamBot\\ui\\src\\Pages\\UserAddPage.js":"12","C:\\Users\\webco\\go\\src\\teamBot\\ui\\src\\Components\\AlertMessage\\AlertMessage.js":"13","C:\\Users\\webco\\go\\src\\teamBot\\ui\\src\\Forms\\EditUserForm.js":"14","C:\\Users\\webco\\go\\src\\teamBot\\ui\\src\\Pages\\UserEditPage.js":"15"},{"size":262,"mtime":1613829811717,"results":"16","hashOfConfig":"17"},{"size":2692,"mtime":1615498408259,"results":"18","hashOfConfig":"17"},{"size":1749,"mtime":1613829848882,"results":"19","hashOfConfig":"17"},{"size":297,"mtime":1613829848878,"results":"20","hashOfConfig":"17"},{"size":2552,"mtime":1614952258296,"results":"21","hashOfConfig":"17"},{"size":255,"mtime":1613829848888,"results":"22","hashOfConfig":"17"},{"size":3727,"mtime":1615655457444,"results":"23","hashOfConfig":"17"},{"size":1247,"mtime":1614952334076,"results":"24","hashOfConfig":"17"},{"size":4761,"mtime":1614429303705,"results":"25","hashOfConfig":"17"},{"size":1873,"mtime":1614430030076,"results":"26","hashOfConfig":"17"},{"size":3611,"mtime":1615644493813,"results":"27","hashOfConfig":"17"},{"size":1863,"mtime":1615497587479,"results":"28","hashOfConfig":"17"},{"size":803,"mtime":1615494410001,"results":"29","hashOfConfig":"17"},{"size":1698,"mtime":1615499948948,"results":"30","hashOfConfig":"17"},{"size":2546,"mtime":1615499990846,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"nx82tz",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},"C:\\Users\\webco\\go\\src\\teamBot\\ui\\src\\index.js",[],["69","70"],"C:\\Users\\webco\\go\\src\\teamBot\\ui\\src\\App.js",["71"],"import React from 'react';\r\nimport { Router } from 'react-router-dom';\r\nimport {\r\n    Route,\r\n    Switch,\r\n    Redirect,\r\n    withRouter\r\n} from \"react-router-dom\"\r\nimport './App.css';\r\nimport {Layout} from 'antd';\r\nimport Sidebar from './Components/Sidebar/Sidebar'\r\nimport Header from './Components/Header/Header'\r\nimport HomePage from \"./Pages/HomePage\";\r\nimport SettingsPage from \"./Pages/SettingsPage\";\r\nimport {createBrowserHistory} from 'history'\r\nimport UserListPage from \"./Pages/UserListPage\";\r\nimport TaskListPage from \"./Pages/TaskListPage\";\r\nimport TeamSettingsPage from \"./Pages/TeamSettingsPage\";\r\nimport WeekendSettingsPage from \"./Pages/WeekendSettingsPage\";\r\nimport UserAddPage from \"./Pages/UserAddPage\";\r\nimport UserEditPage from \"./Pages/UserEditPage\";\r\n\r\nconst { Content } = Layout;\r\n// создаём кастомную историю\r\nconst history = createBrowserHistory()\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        collapsed: false,\r\n    };\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Router history={history}>\r\n            <Layout>\r\n                <Sidebar />\r\n                <Layout className=\"site-layout\">\r\n                    <Header />\r\n                    <Content\r\n                        className=\"\"\r\n                        style={{\r\n                            margin: '24px 16px',\r\n                            minHeight: 280,\r\n                        }}\r\n                    >\r\n                        <Switch>\r\n                            <Route history={history} path='/team/settings' component={TeamSettingsPage} />\r\n                            <Route history={history} path='/team/weekend' component={WeekendSettingsPage} />\r\n                            <Route history={history} path='/settings' component={SettingsPage} />\r\n                            <Route history={history} path='/team/:teamId/users/add' component={UserAddPage} />\r\n                            <Route history={history} path='/team/:teamId/users/edit/:userId' component={UserEditPage} />\r\n                            <Route history={history} path='/team/:teamId/users' component={UserListPage} />\r\n                            <Route history={history} path='/team/:teamId/tasks' component={TaskListPage} />\r\n                            <Route history={history} exact path='/' component={HomePage} />\r\n                            <Redirect to='/' />\r\n                        </Switch>\r\n                    </Content>\r\n                </Layout>\r\n            </Layout>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\webco\\go\\src\\teamBot\\ui\\src\\Components\\Sidebar\\Sidebar.js",[],"C:\\Users\\webco\\go\\src\\teamBot\\ui\\src\\Components\\Header\\Header.js",[],"C:\\Users\\webco\\go\\src\\teamBot\\ui\\src\\Pages\\HomePage.js",["72","73"],"import React from 'react';\r\nimport { Card, Col, Row, List, Spin } from 'antd';\r\nimport {UserOutlined, BarsOutlined, CalendarOutlined, SettingOutlined} from '@ant-design/icons';\r\nimport {Link} from \"react-router-dom\";\r\nimport ServerApi from \"../Services/ServerApi\";\r\n\r\nconst teamMenu = [\r\n    {title: \"Пользователи\", icon: <UserOutlined />, url: function (team){\r\n        return '/team/' + team.id + '/users'\r\n    }},\r\n    {title: \"Задачи\", icon: <BarsOutlined />, url: function (team){\r\n            return '/team/' + team.id + '/tasks'\r\n    }},\r\n    {title: \"Расписание\", icon: <CalendarOutlined />, url: function (team){\r\n        return '/team/weekend'\r\n    }},\r\n    {title: \"Настройки\", icon: <SettingOutlined />, url: function (team){\r\n        return '/team/settings';\r\n    }}\r\n];\r\n\r\nclass HomePage extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            teams: [],\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadTeams();\r\n    }\r\n\r\n    async loadTeams() {\r\n        let response = await ServerApi.team().list()\r\n        if ('result' in response) {\r\n            this.setState({teams: response.result, loading: false})\r\n        } else {\r\n            this.setState({teams: [], loading: false})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"site-card-wrapper\">\r\n                <Spin spinning={this.state.loading}>\r\n                <List\r\n                    grid={{\r\n                        gutter: 0,\r\n                        column: 5,\r\n                    }}\r\n                    dataSource={this.state.teams}\r\n                    renderItem={team => (\r\n                        <List.Item>\r\n                            <Card title={team.title} bodyStyle={{padding: 0}}>\r\n                                <List\r\n                                    size=\"small\"\r\n                                    dataSource={teamMenu}\r\n                                    renderItem={item => (\r\n                                        <List.Item>\r\n                                            <Link to={item.url(team)}>{item.icon} {item.title}</Link>\r\n                                        </List.Item>\r\n                                    )}\r\n                                />\r\n                            </Card>\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n                </Spin>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage","C:\\Users\\webco\\go\\src\\teamBot\\ui\\src\\Pages\\SettingsPage.js",[],"C:\\Users\\webco\\go\\src\\teamBot\\ui\\src\\Pages\\UserListPage.js",[],"C:\\Users\\webco\\go\\src\\teamBot\\ui\\src\\Pages\\TaskListPage.js",["74","75"],"import React from 'react';\r\nimport {Table, Tag, Space, PageHeader} from 'antd';\r\nimport ServerApi from \"../Services/ServerApi\";\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Type',\r\n        dataIndex: 'type',\r\n        key: 'type',\r\n    },\r\n    {\r\n        title: 'Last run time',\r\n        dataIndex: 'last_run_time',\r\n        key: 'last_run_time',\r\n    },\r\n];\r\n\r\nclass TaskListPage extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list: [],\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadList(this.props.match.params.teamId)\r\n    }\r\n\r\n    async loadList(teamId) {\r\n        let response = await ServerApi.task(teamId).list()\r\n        if ('result' in response) {\r\n            this.setState({list: response.result, loading: false})\r\n        } else {\r\n            this.setState({list: [], loading: false})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <PageHeader\r\n                onBack={() => window.history.back()}\r\n                title=\"Задачи\"\r\n            >\r\n                <Table columns={columns} dataSource={this.state.list} />\r\n            </PageHeader>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskListPage","C:\\Users\\webco\\go\\src\\teamBot\\ui\\src\\Pages\\TeamSettingsPage.js",[],"C:\\Users\\webco\\go\\src\\teamBot\\ui\\src\\Pages\\WeekendSettingsPage.js",["76"],"import React from 'react';\r\nimport {PageHeader, Form, Input, Button, Checkbox  } from \"antd\";\r\n\r\nconst days = [\r\n    { label: 'Monday', value: 'Monday' },\r\n    { label: 'Tuesday', value: 'Tuesday' },\r\n    { label: 'Wednesday', value: 'Wednesday' },\r\n    { label: 'Thursday', value: 'Thursday' },\r\n    { label: 'Friday', value: 'Friday' },\r\n    { label: 'Saturday', value: 'Saturday' },\r\n    { label: 'Sunday', value: 'Sunday' },\r\n];\r\n\r\nclass WeekendSettingsPage extends React.Component{\r\n\r\n    componentDidMount() {\r\n        console.log(\"SettingsPage mount\")\r\n    }\r\n\r\n    onFinish(values: any) {\r\n        console.log('Success:', values);\r\n    };\r\n\r\n    onFinishFailed(errorInfo: any) {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <PageHeader\r\n                onBack={() => window.history.back()}\r\n                title=\"Расписание\"\r\n            >\r\n                <div className={\"app-form-container\"}>\r\n                <Form\r\n                    layout=\"vertical\"\r\n                    name=\"basic\"\r\n                    initialValues={{ title: \"BIS\", minWorklog: 14400 }}\r\n                    onFinish={this.onFinish}\r\n                    onFinishFailed={this.onFinishFailed}\r\n                >\r\n                    <Form.Item\r\n                        label=\"Рабочие дни недели\"\r\n                        name=\"weekdays\"\r\n                    >\r\n                        <Checkbox.Group options={days} />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Сохранить\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n                </div>\r\n            </PageHeader>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WeekendSettingsPage","C:\\Users\\webco\\go\\src\\teamBot\\ui\\src\\Services\\ServerApi.js",[],"C:\\Users\\webco\\go\\src\\teamBot\\ui\\src\\Pages\\UserAddPage.js",["77","78","79","80","81","82","83"],"import React from 'react';\r\nimport {PageHeader, Spin, Form, Input, Button, InputNumber, Select, Divider, Alert} from 'antd';\r\nimport ServerApi from \"../Services/ServerApi\";\r\nimport AlertMessage from \"../Components/AlertMessage/AlertMessage\";\r\nimport EditUserForm from \"../Forms/EditUserForm\";\r\n\r\nclass UserAddPage extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item: {},\r\n            loading: false,\r\n            message: {error: null, success: null}\r\n        }\r\n\r\n        this.saveUser = this.saveUser.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    getTeamId() {\r\n        return this.props.match.params.teamId;\r\n    }\r\n\r\n    async saveUser(user)\r\n    {\r\n        this.setState({loading: true})\r\n        let response = await ServerApi.user(this.getTeamId()).add(user)\r\n        console.log('Response:', response)\r\n        if ('error' in response) {\r\n            this.setState({message: {error: response.error}, loading: false})\r\n        } else {\r\n            this.setState({message: {success: \"Пользователь добавлен\"}, loading: false})\r\n        }\r\n\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Success:', values);\r\n        this.saveUser(values)\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <PageHeader\r\n                onBack={() => window.history.back()}\r\n                title=\"Новый пользователь\"\r\n            >\r\n                <Spin spinning={this.state.loading}>\r\n                    <div className={\"app-form-container\"}>\r\n                        <AlertMessage message={this.state.message} />\r\n                        <EditUserForm onSubmit={this.handleSubmit}/>\r\n                    </div>\r\n                </Spin>\r\n            </PageHeader>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserAddPage","C:\\Users\\webco\\go\\src\\teamBot\\ui\\src\\Components\\AlertMessage\\AlertMessage.js",[],"C:\\Users\\webco\\go\\src\\teamBot\\ui\\src\\Forms\\EditUserForm.js",[],"C:\\Users\\webco\\go\\src\\teamBot\\ui\\src\\Pages\\UserEditPage.js",["84","85","86","87","88","89","90"],"import React from 'react';\r\nimport {PageHeader, Spin, Form, Input, Button, InputNumber, Select, Divider, Alert} from 'antd';\r\nimport ServerApi from \"../Services/ServerApi\";\r\nimport AlertMessage from \"../Components/AlertMessage/AlertMessage\";\r\nimport EditUserForm from \"../Forms/EditUserForm\";\r\n\r\nclass UserEditPage extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item: null,\r\n            loading: true,\r\n            message: {error: null, success: null}\r\n        }\r\n\r\n        this.saveUser = this.saveUser.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadItem(this.getTeamId(), this.getUserId())\r\n    }\r\n\r\n    async loadItem(teamId, userId) {\r\n        let response = await ServerApi.user(teamId).get(userId)\r\n        console.log(\"Response\", response)\r\n        if ('error' in response) {\r\n            this.setState({message: {error: response.error}, loading: false})\r\n        } else {\r\n            this.setState({item: response, loading: false})\r\n        }\r\n    }\r\n\r\n    getTeamId() {\r\n        return this.props.match.params.teamId;\r\n    }\r\n\r\n    getUserId() {\r\n        return this.props.match.params.userId;\r\n    }\r\n\r\n    async saveUser(user)\r\n    {\r\n        this.setState({loading: true})\r\n        let response = await ServerApi.user(this.getTeamId()).edit(this.getUserId(), user)\r\n        console.log('Response:', response)\r\n        if ('error' in response) {\r\n            this.setState({message: {error: response.error}, loading: false})\r\n        } else {\r\n            this.setState({message: {success: \"Пользователь отредактирован\"}, loading: false})\r\n        }\r\n\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Success:', values);\r\n        this.saveUser(values)\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <PageHeader\r\n                onBack={() => window.history.back()}\r\n                title=\"Редактирование пользователя\"\r\n            >\r\n                <Spin spinning={this.state.loading}>\r\n                    <div className={\"app-form-container\"}>\r\n                        <AlertMessage message={this.state.message} />\r\n                        {this.state.item &&\r\n                            <EditUserForm value={this.state.item} onSubmit={this.handleSubmit}/>\r\n                        }\r\n                    </div>\r\n                </Spin>\r\n            </PageHeader>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserEditPage",{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":7,"column":5,"nodeType":"97","messageId":"98","endLine":7,"endColumn":15},{"ruleId":"95","severity":1,"message":"99","line":2,"column":16,"nodeType":"97","messageId":"98","endLine":2,"endColumn":19},{"ruleId":"95","severity":1,"message":"100","line":2,"column":21,"nodeType":"97","messageId":"98","endLine":2,"endColumn":24},{"ruleId":"95","severity":1,"message":"101","line":2,"column":16,"nodeType":"97","messageId":"98","endLine":2,"endColumn":19},{"ruleId":"95","severity":1,"message":"102","line":2,"column":21,"nodeType":"97","messageId":"98","endLine":2,"endColumn":26},{"ruleId":"95","severity":1,"message":"103","line":2,"column":27,"nodeType":"97","messageId":"98","endLine":2,"endColumn":32},{"ruleId":"95","severity":1,"message":"104","line":2,"column":27,"nodeType":"97","messageId":"98","endLine":2,"endColumn":31},{"ruleId":"95","severity":1,"message":"103","line":2,"column":33,"nodeType":"97","messageId":"98","endLine":2,"endColumn":38},{"ruleId":"95","severity":1,"message":"105","line":2,"column":40,"nodeType":"97","messageId":"98","endLine":2,"endColumn":46},{"ruleId":"95","severity":1,"message":"106","line":2,"column":48,"nodeType":"97","messageId":"98","endLine":2,"endColumn":59},{"ruleId":"95","severity":1,"message":"107","line":2,"column":61,"nodeType":"97","messageId":"98","endLine":2,"endColumn":67},{"ruleId":"95","severity":1,"message":"108","line":2,"column":69,"nodeType":"97","messageId":"98","endLine":2,"endColumn":76},{"ruleId":"95","severity":1,"message":"109","line":2,"column":78,"nodeType":"97","messageId":"98","endLine":2,"endColumn":83},{"ruleId":"95","severity":1,"message":"104","line":2,"column":27,"nodeType":"97","messageId":"98","endLine":2,"endColumn":31},{"ruleId":"95","severity":1,"message":"103","line":2,"column":33,"nodeType":"97","messageId":"98","endLine":2,"endColumn":38},{"ruleId":"95","severity":1,"message":"105","line":2,"column":40,"nodeType":"97","messageId":"98","endLine":2,"endColumn":46},{"ruleId":"95","severity":1,"message":"106","line":2,"column":48,"nodeType":"97","messageId":"98","endLine":2,"endColumn":59},{"ruleId":"95","severity":1,"message":"107","line":2,"column":61,"nodeType":"97","messageId":"98","endLine":2,"endColumn":67},{"ruleId":"95","severity":1,"message":"108","line":2,"column":69,"nodeType":"97","messageId":"98","endLine":2,"endColumn":76},{"ruleId":"95","severity":1,"message":"109","line":2,"column":78,"nodeType":"97","messageId":"98","endLine":2,"endColumn":83},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'Row' is defined but never used.","'Tag' is defined but never used.","'Space' is defined but never used.","'Input' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'InputNumber' is defined but never used.","'Select' is defined but never used.","'Divider' is defined but never used.","'Alert' is defined but never used.","no-global-assign","no-unsafe-negation"]